# Эти задачи необходимо решить используя регулярные выражения!

# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь заглавные первые буквы.

# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее подчеркивание и цифры,
# потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net), te_4_st@test.com
#  - верно указан.
import re

# def check_regex(regex, text):
#     a = re.search(regex, text)
#     if a:
#         return a
#     else:
#         return None
#
#
# firstReq = {'name': input('Введите имя:').title(), 'lastname': input('Введите фамилию:').title(),
#             'email': input('Введите email:').lower()}
# regex = '^[\w_]+@[\w.]+\.(com|ru|org$)'
# print('Ваше имя: {}\nВаша фамилия: {}\nВаш EM@il: {}\n'.format(firstReq['name'], firstReq['lastname'],
#                                                                check_regex(regex, firstReq['email'])))
# if check_regex(regex, firstReq['email']):
#     print('Все поля заполнены корректно')
# else:
#     print('Неверно указан email: {} необходимо ввести по формату user@email.com|org|ru\n'.format(firstReq['email']))

# Задача - 2:
# Вам дан текст:
some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная сидела —
А нынче... погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!


search_dot = re.findall('\.{2,}', some_str)
# if search_dot:
#     print('Этот текст имеет более одной точки', search_dot)
# else:
#     print('В этом тексте нет точек более одной подряд')
result = ''
print([result for result in search_dot])
