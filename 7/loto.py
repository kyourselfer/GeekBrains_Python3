#!/usr/bin/python3

"""
== Лото ==
Правила игры в лото.
Игра ведется с помощью специальных карточек, на которых отмечены числа,
и фишек (бочонков) с цифрами.
+ Количество бочонков — 90 штук (с цифрами от 1 до 90).
Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:
В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается
случайная карточка.
+ Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.
Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.

Побеждает тот, кто первый закроет все числа на своей карточке.
Пример одного хода:
Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71
--------------------------
-- Карточка компьютера ---
 7 87     - 14    11
      16 49    55 88    77
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)
Подсказка: каждый следующий случайный бочонок из мешка удобно получать
с помощью функции-генератора.
Подсказка: для работы с псевдослучайными числами удобно использовать
модуль random: http://docs.python.org/3/library/random.html
"""
import random


# Случайный боченок из мешка
def randomchoice(bag):
    # r =
    # x = bag[r]
    # return x
    return random.randrange(1, len(bag) - 1)


# Получаем список:
# 1. Проверяем на уникальность
# 2. Сортируем
# 3. Отдаем список
def uniqsort(list):
    # переберем строку на одинаковость элементов
    # если элемент уникален добавляем
    listuniq = [x for x in list if list.count(x) == 1]
    print('Uniq:', listuniq, 'length:', len(listuniq))
    # если длина меньше 9 добавить элементов
    while len(listuniq) < 9:
        # добавляем
        listuniq.append(randomchoice(list))
        for k in listuniq:
            # error
            if listuniq.count(k) > 1:
                listuniq.remove(k)
            else:
                listuniq.append(randomchoice(list))
    # Просортировали строку
    print(listuniq)
    # print(listuniq.sort())
    # return listuniq


## боченок
# мешок с боченками
bagofbarrels = [x for x in range(1, 91)]
print('мешок:', bagofbarrels)
# Каждый ход выбирается один случайный бочонок и выводится на экран.
print('боченок:', randomchoice(bagofbarrels))

## карточка
# Создали рандомную строку
cardstr1 = [random.randrange(1, 89) for x in range(0, 9)]
print('Карта1:', cardstr1)
uniqsort(cardstr1)
# print('Uniq:', uniqsort(cardstr1))
# переберем строку на одинаковость элементов
# если элемент уникален добавляем
# print('str1:', cardstr1)
# cardstr1uniq = [h for h in cardstr1 if cardstr1.count(h) == 1]
# print('length before:', len(cardstr1uniq))
# while len(cardstr1uniq) < 9:
#     cardstr1uniq.append(randomchoice(bagofbarrels))
# print('length after:', len(cardstr1uniq))
# print('uniq after:', cardstr1uniq)
# # Просортировали строку
# cardstr1uniq.sort()
# print('Просортировали:', cardstr1uniq)

# Заменяем в строке 4 элемента(случайно) на ''
# while cardstr1.count('') <= 3:
#     x = random.randrange(0, 9)
#     cardstr1[x] = ''
# print('Заменяем в строке 4 элемента(в случайном порядке) на пробелы:', cardstr1)
# Все цифры в карточке уникальны.
#
# a = [1,2,2,3]
# print(a.index(3))
# СРАВНЕНИЕ на уникальность
# i = 1
# countx = 0
# while countx != 4:
#     for x in cardstr1:
#         if x == 0:
#             countx = countx + 1
#             print('I\'ve found')
#             print('Счетчик: ', countx)
#             if countx == 2:
#                 break
#             else:
#                 continue
#         else:
#             continue


# Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
# расположенных по возрастанию. Все цифры в карточке уникальны.


# print(random_barrel(bagofbarrels))
# Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
# расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:
# matrix1 = [[1, 2, 3, 4, 5, 6, 7, 8, 9],
#            [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
#            [20, 21, 22, 23, 24, 25, 26, 27, 28, 29]]
# print(matrix1)
