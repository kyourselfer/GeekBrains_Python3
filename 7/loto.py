#!/usr/bin/python3

"""
== Лото ==
Правила игры в лото.
Игра ведется с помощью специальных карточек, на которых отмечены числа,
и фишек (бочонков) с цифрами.
+ Количество бочонков — 90 штук (с цифрами от 1 до 90).
Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:
В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается
случайная карточка.
+ Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.
Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.

Побеждает тот, кто первый закроет все числа на своей карточке.
Пример одного хода:
Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71
--------------------------
-- Карточка компьютера ---
 7 87     - 14    11
      16 49    55 88    77
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)
Подсказка: каждый следующий случайный бочонок из мешка удобно получать
с помощью функции-генератора.
Подсказка: для работы с псевдослучайными числами удобно использовать
модуль random: http://docs.python.org/3/library/random.html
"""
import random


# Случайный боченок из мешка
def randomchoice(bag):
    # r =
    # x = bag[r]
    # return x
    return random.randrange(1, len(bag) - 1)


# Получаем список:
# 1. Проверяем на уникальность
# 3. Отдаем уникальный список
def uniqsort(l):
    # переберем строку на одинаковость элементов
    # если элемент уникален добавляем
    listuniq = [x for x in l if l.count(x) == 1]
    if len(listuniq) < 9:
        print('len < 9: Отправляем list в numberel9()')
        numberel9(listuniq, bagofbarrels)
    else:
        print('el. >= 9')
    print('Uniq:', listuniq, 'length:', len(listuniq))
    return listuniq


def numberel9(l1, bag):
    print('You\'ve entered to numberel9().')
    # пока длина меньше 9 добавить элементов
    l1new = []
    while len(l1new) <= 9:
        print('while:', l1new, len(l1new))
        for k in bag:
            print('for:', k)
            if k not in l1new:
                print('IF:')
                l1new.append(k)
    # добавляем если el. если нету в list

    # Просортировали строку
    print(l1, '\n', l1new)
    # print(listuniq.sort())
    # return listuniq


## боченок
# мешок с боченками
bagofbarrels = [x for x in range(1, 91)]
print('мешок:', bagofbarrels)
# Каждый ход выбирается один случайный бочонок и выводится на экран.
print('боченок:', randomchoice(bagofbarrels))

## карточка
# Создали рандомную строку
cardstr1 = [random.randrange(1, 89) for x in range(0, 9)]
print('Карта1:', cardstr1)
# uniqsort(cardstr1)
cardstr1uniqsort = cardstr1

# print('Uniq:', uniqsort(cardstr1))

# Заменяем в строке 4 элемента(случайно) на ''
# while cardstr1.count('') <= 3:
#     x = random.randrange(0, 9)
#     cardstr1[x] = ''
# print('Заменяем в строке 4 элемента(в случайном порядке) на пробелы:', cardstr1)
# Все цифры в карточке уникальны.
#
# a = [1,2,2,3]
# print(a.index(3))
# СРАВНЕНИЕ на уникальность
# i = 1
# countx = 0
# while countx != 4:
#     for x in cardstr1:
#         if x == 0:
#             countx = countx + 1
#             print('I\'ve found')
#             print('Счетчик: ', countx)
#             if countx == 2:
#                 break
#             else:
#                 continue
#         else:
#             continue
cardstr1uniqsort = ['', '', '', '', 5, 6, 7, 8, 9]
cardstr2uniqsort = [10, 11, 12, 13, '', '', '', 17, '']
cardstr3uniqsort = [19, '', 21, '', '', '', 25, 26, 27]
card1 = [cardstr1uniqsort, cardstr2uniqsort, cardstr3uniqsort]
print('Card1:', card1)


# Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
# Ищем боченок в строке
def bs(el, str):
    if el in str:
        i1 = str.index(barrel)
        str.pop(i1)
        str.insert(i1, 'X')
        return str
    ############################################################ если нет тогда вернуть не измененную строку


while True:
    barrel = int(input('Enter № of barrel: '))
    choiceofplayer1 = input('Зачеркните цифру на карточке или продолжить y/r: ')
    if choiceofplayer1 == 'y':
        # Если игрок выбрал "зачеркнуть":
        # Если цифра есть на карточке - она зачеркивается и игра продолжается.
        numofstr = 0
        for str in card1:
            # номер строки
            numofstr += 1
            print(bs(barrel, str))
            #
            # if barrel in str:
            #     print('in:', numofstr)
            #     i1 = str.index(barrel)
            #     str.pop(i1)
            #     str.insert(i1, 'X')
            #     continue
            # elif barrel not in str:
            #     pass
            # else:
            #     pass
    elif choiceofplayer1 == 'r':
        print(card1)
        continue
    else:
        break
    print(card1)

# 	Если цифры на карточке нет - игрок проигрывает и игра завершается.
# Если игрок выбрал "продолжить":
# 	Если цифра есть на карточке - игрок проигрывает и игра завершается.
# 	Если цифры на карточке нет - игра продолжается.
#
# Побеждает тот, кто первый закроет все числа на своей карточке.


# Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
# расположенных по возрастанию. Все цифры в карточке уникальны.


# print(random_barrel(bagofbarrels))
# Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
# расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:
# matrix1 = [[1, 2, 3, 4, 5, 6, 7, 8, 9],
#            [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
#            [20, 21, 22, 23, 24, 25, 26, 27, 28, 29]]
# print(matrix1)
